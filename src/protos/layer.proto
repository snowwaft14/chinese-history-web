syntax = "proto3";

option csharp_namespace = "Newinfosoft.ChineseHistory.Server.ServiceBase";

package chinesehistory;

import "common.proto";

// 枚举：图层类型
enum LayerType {
  DEFAULT = 0;
  CITY = 1;       //城市
  EVENT = 2;      //事件，战争意外的历史事件，例如王安石变法
  TERRITORY = 3;  //领土
  ROUTE = 4;      //路线，例如晋文公退避三舍路线，楚军进军路线
  WAR = 5;        //战争，例如城濮之战
  DISASTER = 6;   //灾难，例如地震
}

// 图层元素结构
message LayerItem {
  string id = 1;
  string name = 2;
  LayerType type = 3;
  string geometry_json = 4;
  GregorianDate start_date = 5;
  GregorianDate end_date = 6;
  repeated string tags = 7;
}

// 获取图层请求（无查询条件）
message GetLayersRequest {
  // 空请求，获取所有图层
}

// 查找图层请求（包含所有可能的查询条件）
message FindLayersRequest {
  HistoricalDate start = 1;              // 起始时间（可选）
  HistoricalDate end = 2;                // 结束时间（可选）
  LayerType layer_type = 3;              // 图层类型（可选）
  repeated LayerType layer_types = 4;    // 图层类型过滤（可选）
  string item_id = 5;                    // 图层项目ID（可选）
  string name = 6;                       // 图层项目名称（可选）
  repeated string tags = 7;              // 标签过滤（可选）
}

// 返回结构
message GetLayersResponse {
  repeated LayerItem items = 1;
}

// =========================== 批量CRUD操作 ===========================

// 批量图层项目操作请求
message UpsertLayerItemsRequest {
  repeated LayerItem layer_items = 1;    // 要插入或更新的图层项目列表
}

// 批量删除图层项目请求
message DeleteLayerItemsRequest {
  repeated string layer_item_ids = 1;    // 要删除的图层项目ID列表
}

service LayerService {
  // ============== 查询操作 ==============
  // 获取所有图层
  rpc GetLayers(GetLayersRequest) returns (GetLayersResponse);
  
  // 查找图层（根据条件）
  rpc FindLayers(FindLayersRequest) returns (GetLayersResponse);
  
  // ============== 批量CRUD操作 ==============
  // 批量插入或更新图层项目
  rpc UpsertLayerItems(UpsertLayerItemsRequest) returns (BatchOperationResponse);
  
  // 批量删除图层项目
  rpc DeleteLayerItems(DeleteLayerItemsRequest) returns (BatchOperationResponse);
} 