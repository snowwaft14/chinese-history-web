syntax = "proto3";

option csharp_namespace = "Newinfosoft.ChineseHistory.Server.ServiceBase";

package chinesehistory;

import "common.proto";

// 王朝，例如唐、宋、元、明、清
message Dynasty {
  string name = 1;
  string description = 2;
  int32 start_year = 3;
  int32 end_year = 4;
  repeated Period periods = 5;
  repeated Emperor emperors = 6;        // 所有皇帝
  repeated string tags = 7;
  repeated string search_values = 8;    // 搜索辅助工具，例如拼音、声母
}

// 王朝下的一些时代，例如北宋、南宋、初唐、盛唐、中唐、晚唐、安史之乱、贞观之治等等
message Period {
  string name = 1;
  string description = 2;
  GregorianDate start = 3;           // 开始日期
  GregorianDate end = 4;             // 结束日期 
  repeated string search_values = 5;    // 搜索辅助工具，例如拼音、声母
}

// 皇帝或国家的领袖
message Emperor {
  string id = 1;                         // 唯一标识符，一般是约定叫法，例如"汉武帝"、"唐太宗"、"清康熙"
  string name = 2;                       // 皇帝姓名，如"赵匡胤"
  string temple_name = 3;                // 庙号，如"太祖"
  string posthumous_name = 4;            // 谥号，如"文皇帝"
  string courtesy_name = 5;              // 字（如"德基"）
  string dynasty_name = 6;               // 所属朝代ID，如"唐朝"
  repeated EraName era_names = 7;        // 所有年号

  GregorianDate reign_start = 8;        // 在位起始
  GregorianDate reign_end = 9;          // 在位结束
  GregorianDate birth = 10;             // 出生日期
  GregorianDate death = 11;             // 去世日期

  string birthplace = 12;                // 出生地
  string burial_place = 13;              // 陵墓或安葬地
  string notes = 14;                     // 备注或简介
  repeated string search_values = 15;    // 搜索辅助工具，例如拼音、声母
}

// 年号
message EraName {
  string name = 1;                       // 年号名称，如"贞观"
  GregorianDate start_date = 2;         // 年号开始日期
  GregorianDate end_date = 3;           // 年号结束日期
  string note = 4;                       // 补充信息（如更改原因、事件）
  repeated string search_values = 5;     // 搜索辅助工具，例如拼音、声母
}

// 获取多个朝代响应
message GetDynastiesResponse {
  repeated Dynasty dynasties = 1;
}

// 获取多个皇帝响应
message GetEmperorsResponse {
  repeated Emperor emperors = 1;
}

// 获取多个年号响应
message GetErasResponse {
  repeated EraName era_names = 1;       // 年号列表
}

// 获取朝代请求（无查询条件）
message GetDynastiesRequest {
  // 空请求，获取所有朝代
}

// 查找朝代请求（包含所有可能的查询条件）
message FindDynastiesRequest {
  string dynasty_id = 1;                 // 朝代ID（可选）
  string name = 2;                       // 朝代名称（可选）
  int32 start_year = 3;                  // 开始年份（可选）
  int32 end_year = 4;                    // 结束年份（可选）
  repeated string tags = 5;              // 标签过滤（可选）
}

// 查找皇帝请求（包含所有可能的查询条件）
message FindEmperorsRequest {
  string emperor_id = 1;                 // 皇帝ID（可选）
  string dynasty_name = 2;               // 朝代名称（可选）
  string name = 3;                       // 皇帝姓名（可选）
  string temple_name = 4;                // 庙号（可选）
}

// 查找年号请求（包含所有可能的查询条件）
message FindErasRequest {
  string dynasty_id = 1;                 // 朝代ID（可选）
  string emperor_id = 2;                 // 皇帝ID（可选）
  string era_name = 3;                   // 年号名称（可选）
}

// 获取皇帝请求（无查询条件）
message GetEmperorsRequest {
  // 空请求，获取所有皇帝
}

// 获取年号请求（无查询条件）
message GetErasRequest {
  // 空请求，获取所有年号
}

// =========================== 批量CRUD操作 ===========================

// 批量朝代操作请求
message UpsertDynastiesRequest {
  repeated Dynasty dynasties = 1;        // 要插入或更新的朝代列表
}

// 批量删除朝代请求
message DeleteDynastiesRequest {
  repeated string dynasty_names = 1;     // 要删除的朝代名称列表
}

// 批量皇帝操作请求
message UpsertEmperorsRequest {
  repeated Emperor emperors = 1;         // 要插入或更新的皇帝列表
}

// 批量删除皇帝请求
message DeleteEmperorsRequest {
  repeated string emperor_ids = 1;       // 要删除的皇帝ID列表
}

// 批量时期操作请求
message UpsertPeriodsRequest {
  repeated Period periods = 1;           // 要插入或更新的时期列表
  string dynasty_name = 2;               // 所属朝代名称
}

// 批量年号操作请求
message UpsertEraNamesRequest {
  repeated EraName era_names = 1;        // 要插入或更新的年号列表
  string emperor_id = 2;                 // 所属皇帝ID
}

// 朝代服务
service DynastyService {
  // ============== 查询操作 ==============
  // 获取所有朝代
  rpc GetDynasties(GetDynastiesRequest) returns (GetDynastiesResponse);

  // 查找朝代（根据条件）
  rpc FindDynasties(FindDynastiesRequest) returns (GetDynastiesResponse);
  
  // 获取所有皇帝
  rpc GetEmperors(GetEmperorsRequest) returns (GetEmperorsResponse);

  // 查找皇帝（根据条件）
  rpc FindEmperors(FindEmperorsRequest) returns (GetEmperorsResponse);

  // 获取所有年号
  rpc GetEras(GetErasRequest) returns (GetErasResponse);
  
  // 查找年号（根据条件）
  rpc FindEras(FindErasRequest) returns (GetErasResponse);

  // ============== 批量CRUD操作 ==============
  // 批量插入或更新朝代
  rpc UpsertDynasties(UpsertDynastiesRequest) returns (BatchOperationResponse);
  
  // 批量删除朝代
  rpc DeleteDynasties(DeleteDynastiesRequest) returns (BatchOperationResponse);
  
  // 批量插入或更新皇帝
  rpc UpsertEmperors(UpsertEmperorsRequest) returns (BatchOperationResponse);
  
  // 批量删除皇帝
  rpc DeleteEmperors(DeleteEmperorsRequest) returns (BatchOperationResponse);
  
  // 批量插入或更新时期
  rpc UpsertPeriods(UpsertPeriodsRequest) returns (BatchOperationResponse);
  
  // 批量插入或更新年号
  rpc UpsertEraNames(UpsertEraNamesRequest) returns (BatchOperationResponse);

} 