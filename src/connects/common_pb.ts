// @generated by protoc-gen-es v2.5.2 with parameter "target=ts"
// @generated from file common.proto (package chinesehistory, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file common.proto.
 */
export const file_common: GenFile = /*@__PURE__*/
  fileDesc("Cgxjb21tb24ucHJvdG8SDmNoaW5lc2VoaXN0b3J5IjkKDUdyZWdvcmlhbkRhdGUSDAoEeWVhchgBIAEoBRINCgVtb250aBgCIAEoBRILCgNkYXkYAyABKAUi1AEKDkhpc3RvcmljYWxEYXRlEjMKDWNhbGVuZGFyX3R5cGUYASABKA4yHC5jaGluZXNlaGlzdG9yeS5DYWxlbmRhclR5cGUSDAoEeWVhchgCIAEoBRINCgVtb250aBgDIAEoBRILCgNkYXkYBCABKAUSFQoNaXNfbGVhcF9tb250aBgFIAEoCBIUCgxkeW5hc3R5X25hbWUYBiABKAkSEgoKZW1wZXJvcl9pZBgHIAEoCRIQCghlcmFfbmFtZRgIIAEoCRIQCghlcmFfeWVhchgJIAEoBSoxCgxDYWxlbmRhclR5cGUSDQoJR1JFR09SSUFOEAASCQoFTFVOQVIQARIHCgNFUkEQAkIwqgItTmV3aW5mb3NvZnQuQ2hpbmVzZUhpc3RvcnkuU2VydmVyLlNlcnZpY2VCYXNlYgZwcm90bzM");

/**
 * 公历日期结构
 *
 * @generated from message chinesehistory.GregorianDate
 */
export type GregorianDate = Message<"chinesehistory.GregorianDate"> & {
  /**
   * 年，负数表示公元前
   *
   * @generated from field: int32 year = 1;
   */
  year: number;

  /**
   * 月（1~12）
   *
   * @generated from field: int32 month = 2;
   */
  month: number;

  /**
   * 日（1~31）
   *
   * @generated from field: int32 day = 3;
   */
  day: number;
};

/**
 * Describes the message chinesehistory.GregorianDate.
 * Use `create(GregorianDateSchema)` to create a new message.
 */
export const GregorianDateSchema: GenMessage<GregorianDate> = /*@__PURE__*/
  messageDesc(file_common, 0);

/**
 * 历史日期结构（新版本）
 *
 * @generated from message chinesehistory.HistoricalDate
 */
export type HistoricalDate = Message<"chinesehistory.HistoricalDate"> & {
  /**
   * 纪年类型（GREGORIAN, LUNAR, ERA）
   *
   * @generated from field: chinesehistory.CalendarType calendar_type = 1;
   */
  calendarType: CalendarType;

  /**
   * 年，负数表示公元前
   *
   * @generated from field: int32 year = 2;
   */
  year: number;

  /**
   * 月（1~12）
   *
   * @generated from field: int32 month = 3;
   */
  month: number;

  /**
   * 日（1~31）
   *
   * @generated from field: int32 day = 4;
   */
  day: number;

  /**
   * 是否闰月，仅对农历有效
   *
   * @generated from field: bool is_leap_month = 5;
   */
  isLeapMonth: boolean;

  /**
   * 朝代（如"唐"，用于 ERA 类型）
   *
   * @generated from field: string dynasty_name = 6;
   */
  dynastyName: string;

  /**
   * 皇帝ID（用于 ERA 类型）
   *
   * @generated from field: string emperor_id = 7;
   */
  emperorId: string;

  /**
   * 年号（如"贞观"，用于 ERA 类型）
   *
   * @generated from field: string era_name = 8;
   */
  eraName: string;

  /**
   * 年号第几年（如3，表示贞观3年，用于 ERA 类型）
   *
   * @generated from field: int32 era_year = 9;
   */
  eraYear: number;
};

/**
 * Describes the message chinesehistory.HistoricalDate.
 * Use `create(HistoricalDateSchema)` to create a new message.
 */
export const HistoricalDateSchema: GenMessage<HistoricalDate> = /*@__PURE__*/
  messageDesc(file_common, 1);

/**
 * 枚举：历史纪年类型
 *
 * @generated from enum chinesehistory.CalendarType
 */
export enum CalendarType {
  /**
   * 公元纪年
   *
   * @generated from enum value: GREGORIAN = 0;
   */
  GREGORIAN = 0,

  /**
   * 农历
   *
   * @generated from enum value: LUNAR = 1;
   */
  LUNAR = 1,

  /**
   * 年号
   *
   * @generated from enum value: ERA = 2;
   */
  ERA = 2,
}

/**
 * Describes the enum chinesehistory.CalendarType.
 */
export const CalendarTypeSchema: GenEnum<CalendarType> = /*@__PURE__*/
  enumDesc(file_common, 0);

