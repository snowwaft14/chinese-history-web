// @generated by protoc-gen-es v2.5.2 with parameter "target=ts"
// @generated from file city.proto (package chinesehistory, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { BatchOperationResponseSchema, GregorianDate } from "./common_pb";
import { file_common } from "./common_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file city.proto.
 */
export const file_city: GenFile = /*@__PURE__*/
  fileDesc("CgpjaXR5LnByb3RvEg5jaGluZXNlaGlzdG9yeSKIAQoEQ2l0eRIKCgJpZBgBIAEoCRIMCgRuYW1lGAIgASgJEhMKC2Rlc2NyaXB0aW9uGAMgASgJEiwKB2hpc3RvcnkYBCADKAsyGy5jaGluZXNlaGlzdG9yeS5DaXR5SGlzdG9yeRIMCgR0YWdzGAUgAygJEhUKDXNlYXJjaF92YWx1ZXMYBiADKAkikwIKC0NpdHlIaXN0b3J5EgoKAmlkGAEgASgJEg8KB2NpdHlfaWQYAiABKAkSDAoEbmFtZRgDIAEoCRITCgtkZXNjcmlwdGlvbhgEIAEoCRIxCgpzdGFydF9kYXRlGAUgASgLMh0uY2hpbmVzZWhpc3RvcnkuR3JlZ29yaWFuRGF0ZRIVCg1nZW9tZXRyeV9qc29uGAYgASgJEjgKC2FkbWluX2xldmVsGAcgASgOMiMuY2hpbmVzZWhpc3RvcnkuQWRtaW5pc3RyYXRpdmVMZXZlbBIUCgxkeW5hc3R5X25hbWUYCCABKAkSKgoGc3RhdHVzGAkgASgOMhouY2hpbmVzZWhpc3RvcnkuQ2l0eVN0YXR1cyI5ChFHZXRDaXRpZXNSZXNwb25zZRIkCgZjaXRpZXMYASADKAsyFC5jaGluZXNlaGlzdG9yeS5DaXR5Ik8KGEdldENpdHlIaXN0b3JpZXNSZXNwb25zZRIzCg5jaXR5X2hpc3RvcmllcxgBIAMoCzIbLmNoaW5lc2VoaXN0b3J5LkNpdHlIaXN0b3J5IhIKEEdldENpdGllc1JlcXVlc3QiGQoXR2V0Q2l0eUhpc3Rvcmllc1JlcXVlc3QivAEKEUZpbmRDaXRpZXNSZXF1ZXN0Eg8KB2NpdHlfaWQYASABKAkSDAoEbmFtZRgCIAEoCRIUCgxkeW5hc3R5X25hbWUYAyABKAkSOAoLYWRtaW5fbGV2ZWwYBCABKA4yIy5jaGluZXNlaGlzdG9yeS5BZG1pbmlzdHJhdGl2ZUxldmVsEioKBnN0YXR1cxgFIAEoDjIaLmNoaW5lc2VoaXN0b3J5LkNpdHlTdGF0dXMSDAoEdGFncxgGIAMoCSKjAgoYRmluZENpdHlIaXN0b3JpZXNSZXF1ZXN0Eg8KB2NpdHlfaWQYASABKAkSMQoKc3RhcnRfZGF0ZRgCIAEoCzIdLmNoaW5lc2VoaXN0b3J5LkdyZWdvcmlhbkRhdGUSLwoIZW5kX2RhdGUYAyABKAsyHS5jaGluZXNlaGlzdG9yeS5HcmVnb3JpYW5EYXRlEioKBnN0YXR1cxgEIAEoDjIaLmNoaW5lc2VoaXN0b3J5LkNpdHlTdGF0dXMSKwoEZGF0ZRgFIAEoCzIdLmNoaW5lc2VoaXN0b3J5LkdyZWdvcmlhbkRhdGUSOQoMYWRtaW5fbGV2ZWxzGAYgAygOMiMuY2hpbmVzZWhpc3RvcnkuQWRtaW5pc3RyYXRpdmVMZXZlbCI7ChNVcHNlcnRDaXRpZXNSZXF1ZXN0EiQKBmNpdGllcxgBIAMoCzIULmNoaW5lc2VoaXN0b3J5LkNpdHkiJwoTRGVsZXRlQ2l0aWVzUmVxdWVzdBIQCghjaXR5X2lkcxgBIAMoCSJRChpVcHNlcnRDaXR5SGlzdG9yaWVzUmVxdWVzdBIzCg5jaXR5X2hpc3RvcmllcxgBIAMoCzIbLmNoaW5lc2VoaXN0b3J5LkNpdHlIaXN0b3J5KiYKCkNpdHlTdGF0dXMSCgoGQUNUSVZFEAASDAoISU5BQ1RJVkUQASq/AQoTQWRtaW5pc3RyYXRpdmVMZXZlbBILCgdVTktOT1dOEAASCwoHQ0FQSVRBTBABEhYKElBST1ZJTkNJQUxfQ0FQSVRBTBACEg4KClBSRUZFQ1RVUkUQAxIKCgZDT1VOVFkQBBIICgRUT1dOEAUSCwoHVklMTEFHRRAGEhEKDU1JTElUQVJZX0ZPUlQQBxIQCgxUUkFESU5HX1BPU1QQCBIUChBSRUxJR0lPVVNfQ0VOVEVSEAkSCAoEUEFTUxAKMqgFCgtDaXR5U2VydmljZRJQCglHZXRDaXRpZXMSIC5jaGluZXNlaGlzdG9yeS5HZXRDaXRpZXNSZXF1ZXN0GiEuY2hpbmVzZWhpc3RvcnkuR2V0Q2l0aWVzUmVzcG9uc2USUgoKRmluZENpdGllcxIhLmNoaW5lc2VoaXN0b3J5LkZpbmRDaXRpZXNSZXF1ZXN0GiEuY2hpbmVzZWhpc3RvcnkuR2V0Q2l0aWVzUmVzcG9uc2USZQoQR2V0Q2l0eUhpc3RvcmllcxInLmNoaW5lc2VoaXN0b3J5LkdldENpdHlIaXN0b3JpZXNSZXF1ZXN0GiguY2hpbmVzZWhpc3RvcnkuR2V0Q2l0eUhpc3Rvcmllc1Jlc3BvbnNlEmcKEUZpbmRDaXR5SGlzdG9yaWVzEiguY2hpbmVzZWhpc3RvcnkuRmluZENpdHlIaXN0b3JpZXNSZXF1ZXN0GiguY2hpbmVzZWhpc3RvcnkuR2V0Q2l0eUhpc3Rvcmllc1Jlc3BvbnNlElsKDFVwc2VydENpdGllcxIjLmNoaW5lc2VoaXN0b3J5LlVwc2VydENpdGllc1JlcXVlc3QaJi5jaGluZXNlaGlzdG9yeS5CYXRjaE9wZXJhdGlvblJlc3BvbnNlElsKDERlbGV0ZUNpdGllcxIjLmNoaW5lc2VoaXN0b3J5LkRlbGV0ZUNpdGllc1JlcXVlc3QaJi5jaGluZXNlaGlzdG9yeS5CYXRjaE9wZXJhdGlvblJlc3BvbnNlEmkKE1Vwc2VydENpdHlIaXN0b3JpZXMSKi5jaGluZXNlaGlzdG9yeS5VcHNlcnRDaXR5SGlzdG9yaWVzUmVxdWVzdBomLmNoaW5lc2VoaXN0b3J5LkJhdGNoT3BlcmF0aW9uUmVzcG9uc2VCMKoCLU5ld2luZm9zb2Z0LkNoaW5lc2VIaXN0b3J5LlNlcnZlci5TZXJ2aWNlQmFzZWIGcHJvdG8z", [file_common]);

/**
 * 城市实体 - 跨越朝代和历史时期的概念
 *
 * @generated from message chinesehistory.City
 */
export type City = Message<"chinesehistory.City"> & {
  /**
   * 城市唯一标识符
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * 城市现代名称（如"西安"）
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * 城市描述
   *
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * 城市历史轨迹
   *
   * @generated from field: repeated chinesehistory.CityHistory history = 4;
   */
  history: CityHistory[];

  /**
   * 标签
   *
   * @generated from field: repeated string tags = 5;
   */
  tags: string[];

  /**
   * 搜索辅助工具，例如拼音、声母
   *
   * @generated from field: repeated string search_values = 6;
   */
  searchValues: string[];
};

/**
 * Describes the message chinesehistory.City.
 * Use `create(CitySchema)` to create a new message.
 */
export const CitySchema: GenMessage<City> = /*@__PURE__*/
  messageDesc(file_city, 0);

/**
 * 城市在特定历史时期的状态
 *
 * @generated from message chinesehistory.CityHistory
 */
export type CityHistory = Message<"chinesehistory.CityHistory"> & {
  /**
   * 历史记录唯一标识符
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * 关联的城市ID
   *
   * @generated from field: string city_id = 2;
   */
  cityId: string;

  /**
   * 该时期的城市名称（如"长安"、"咸阳"）
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * 该时期的城市描述
   *
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * 开始日期
   *
   * @generated from field: chinesehistory.GregorianDate start_date = 5;
   */
  startDate?: GregorianDate;

  /**
   * 地理位置JSON（GeoJSON格式）
   *
   * @generated from field: string geometry_json = 6;
   */
  geometryJson: string;

  /**
   * 行政级别
   *
   * @generated from field: chinesehistory.AdministrativeLevel admin_level = 7;
   */
  adminLevel: AdministrativeLevel;

  /**
   * 所属朝代
   *
   * @generated from field: string dynasty_name = 8;
   */
  dynastyName: string;

  /**
   * 城市状态
   *
   * @generated from field: chinesehistory.CityStatus status = 9;
   */
  status: CityStatus;
};

/**
 * Describes the message chinesehistory.CityHistory.
 * Use `create(CityHistorySchema)` to create a new message.
 */
export const CityHistorySchema: GenMessage<CityHistory> = /*@__PURE__*/
  messageDesc(file_city, 1);

/**
 * 获取多个城市响应（统一用于GetCities和FindCities）
 *
 * @generated from message chinesehistory.GetCitiesResponse
 */
export type GetCitiesResponse = Message<"chinesehistory.GetCitiesResponse"> & {
  /**
   * @generated from field: repeated chinesehistory.City cities = 1;
   */
  cities: City[];
};

/**
 * Describes the message chinesehistory.GetCitiesResponse.
 * Use `create(GetCitiesResponseSchema)` to create a new message.
 */
export const GetCitiesResponseSchema: GenMessage<GetCitiesResponse> = /*@__PURE__*/
  messageDesc(file_city, 2);

/**
 * 获取多个城市历史响应（统一用于GetCityHistories和FindCityHistories）
 *
 * @generated from message chinesehistory.GetCityHistoriesResponse
 */
export type GetCityHistoriesResponse = Message<"chinesehistory.GetCityHistoriesResponse"> & {
  /**
   * @generated from field: repeated chinesehistory.CityHistory city_histories = 1;
   */
  cityHistories: CityHistory[];
};

/**
 * Describes the message chinesehistory.GetCityHistoriesResponse.
 * Use `create(GetCityHistoriesResponseSchema)` to create a new message.
 */
export const GetCityHistoriesResponseSchema: GenMessage<GetCityHistoriesResponse> = /*@__PURE__*/
  messageDesc(file_city, 3);

/**
 * 获取城市请求（无查询条件）
 *
 * 空请求，获取所有城市
 *
 * @generated from message chinesehistory.GetCitiesRequest
 */
export type GetCitiesRequest = Message<"chinesehistory.GetCitiesRequest"> & {
};

/**
 * Describes the message chinesehistory.GetCitiesRequest.
 * Use `create(GetCitiesRequestSchema)` to create a new message.
 */
export const GetCitiesRequestSchema: GenMessage<GetCitiesRequest> = /*@__PURE__*/
  messageDesc(file_city, 4);

/**
 * 获取城市历史请求（无查询条件）
 *
 * 空请求，获取所有城市历史
 *
 * @generated from message chinesehistory.GetCityHistoriesRequest
 */
export type GetCityHistoriesRequest = Message<"chinesehistory.GetCityHistoriesRequest"> & {
};

/**
 * Describes the message chinesehistory.GetCityHistoriesRequest.
 * Use `create(GetCityHistoriesRequestSchema)` to create a new message.
 */
export const GetCityHistoriesRequestSchema: GenMessage<GetCityHistoriesRequest> = /*@__PURE__*/
  messageDesc(file_city, 5);

/**
 * 查找城市请求（包含所有可能的查询条件）
 *
 * @generated from message chinesehistory.FindCitiesRequest
 */
export type FindCitiesRequest = Message<"chinesehistory.FindCitiesRequest"> & {
  /**
   * 城市ID（可选）
   *
   * @generated from field: string city_id = 1;
   */
  cityId: string;

  /**
   * 城市名称（支持模糊搜索）（可选）
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * 朝代名称（可选）
   *
   * @generated from field: string dynasty_name = 3;
   */
  dynastyName: string;

  /**
   * 行政级别（可选）
   *
   * @generated from field: chinesehistory.AdministrativeLevel admin_level = 4;
   */
  adminLevel: AdministrativeLevel;

  /**
   * 城市状态过滤（可选）
   *
   * @generated from field: chinesehistory.CityStatus status = 5;
   */
  status: CityStatus;

  /**
   * 标签过滤（可选）
   *
   * @generated from field: repeated string tags = 6;
   */
  tags: string[];
};

/**
 * Describes the message chinesehistory.FindCitiesRequest.
 * Use `create(FindCitiesRequestSchema)` to create a new message.
 */
export const FindCitiesRequestSchema: GenMessage<FindCitiesRequest> = /*@__PURE__*/
  messageDesc(file_city, 6);

/**
 * 查找城市历史请求（包含所有可能的查询条件）
 *
 * @generated from message chinesehistory.FindCityHistoriesRequest
 */
export type FindCityHistoriesRequest = Message<"chinesehistory.FindCityHistoriesRequest"> & {
  /**
   * 城市ID（可选）
   *
   * @generated from field: string city_id = 1;
   */
  cityId: string;

  /**
   * 开始日期（可选）
   *
   * @generated from field: chinesehistory.GregorianDate start_date = 2;
   */
  startDate?: GregorianDate;

  /**
   * 结束日期（可选）
   *
   * @generated from field: chinesehistory.GregorianDate end_date = 3;
   */
  endDate?: GregorianDate;

  /**
   * 城市状态过滤（可选）
   *
   * @generated from field: chinesehistory.CityStatus status = 4;
   */
  status: CityStatus;

  /**
   * 历史日期（可选）
   *
   * @generated from field: chinesehistory.GregorianDate date = 5;
   */
  date?: GregorianDate;

  /**
   * 行政级别过滤（可选）
   *
   * @generated from field: repeated chinesehistory.AdministrativeLevel admin_levels = 6;
   */
  adminLevels: AdministrativeLevel[];
};

/**
 * Describes the message chinesehistory.FindCityHistoriesRequest.
 * Use `create(FindCityHistoriesRequestSchema)` to create a new message.
 */
export const FindCityHistoriesRequestSchema: GenMessage<FindCityHistoriesRequest> = /*@__PURE__*/
  messageDesc(file_city, 7);

/**
 * 批量城市操作请求
 *
 * @generated from message chinesehistory.UpsertCitiesRequest
 */
export type UpsertCitiesRequest = Message<"chinesehistory.UpsertCitiesRequest"> & {
  /**
   * 要插入或更新的城市列表
   *
   * @generated from field: repeated chinesehistory.City cities = 1;
   */
  cities: City[];
};

/**
 * Describes the message chinesehistory.UpsertCitiesRequest.
 * Use `create(UpsertCitiesRequestSchema)` to create a new message.
 */
export const UpsertCitiesRequestSchema: GenMessage<UpsertCitiesRequest> = /*@__PURE__*/
  messageDesc(file_city, 8);

/**
 * 批量删除城市请求
 *
 * @generated from message chinesehistory.DeleteCitiesRequest
 */
export type DeleteCitiesRequest = Message<"chinesehistory.DeleteCitiesRequest"> & {
  /**
   * 要删除的城市ID列表
   *
   * @generated from field: repeated string city_ids = 1;
   */
  cityIds: string[];
};

/**
 * Describes the message chinesehistory.DeleteCitiesRequest.
 * Use `create(DeleteCitiesRequestSchema)` to create a new message.
 */
export const DeleteCitiesRequestSchema: GenMessage<DeleteCitiesRequest> = /*@__PURE__*/
  messageDesc(file_city, 9);

/**
 * 批量城市历史操作请求
 *
 * @generated from message chinesehistory.UpsertCityHistoriesRequest
 */
export type UpsertCityHistoriesRequest = Message<"chinesehistory.UpsertCityHistoriesRequest"> & {
  /**
   * 要插入或更新的城市历史列表
   *
   * @generated from field: repeated chinesehistory.CityHistory city_histories = 1;
   */
  cityHistories: CityHistory[];
};

/**
 * Describes the message chinesehistory.UpsertCityHistoriesRequest.
 * Use `create(UpsertCityHistoriesRequestSchema)` to create a new message.
 */
export const UpsertCityHistoriesRequestSchema: GenMessage<UpsertCityHistoriesRequest> = /*@__PURE__*/
  messageDesc(file_city, 10);

/**
 * 城市状态枚举
 *
 * @generated from enum chinesehistory.CityStatus
 */
export enum CityStatus {
  /**
   * 活跃/存在
   *
   * @generated from enum value: ACTIVE = 0;
   */
  ACTIVE = 0,

  /**
   * 废弃/不存在
   *
   * @generated from enum value: INACTIVE = 1;
   */
  INACTIVE = 1,
}

/**
 * Describes the enum chinesehistory.CityStatus.
 */
export const CityStatusSchema: GenEnum<CityStatus> = /*@__PURE__*/
  enumDesc(file_city, 0);

/**
 * 行政级别枚举
 *
 * @generated from enum chinesehistory.AdministrativeLevel
 */
export enum AdministrativeLevel {
  /**
   * 未知
   *
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * 都城
   *
   * @generated from enum value: CAPITAL = 1;
   */
  CAPITAL = 1,

  /**
   * 省会
   *
   * @generated from enum value: PROVINCIAL_CAPITAL = 2;
   */
  PROVINCIAL_CAPITAL = 2,

  /**
   * 府
   *
   * @generated from enum value: PREFECTURE = 3;
   */
  PREFECTURE = 3,

  /**
   * 县
   *
   * @generated from enum value: COUNTY = 4;
   */
  COUNTY = 4,

  /**
   * 镇
   *
   * @generated from enum value: TOWN = 5;
   */
  TOWN = 5,

  /**
   * 村
   *
   * @generated from enum value: VILLAGE = 6;
   */
  VILLAGE = 6,

  /**
   * 军事要塞
   *
   * @generated from enum value: MILITARY_FORT = 7;
   */
  MILITARY_FORT = 7,

  /**
   * 贸易据点
   *
   * @generated from enum value: TRADING_POST = 8;
   */
  TRADING_POST = 8,

  /**
   * 宗教中心
   *
   * @generated from enum value: RELIGIOUS_CENTER = 9;
   */
  RELIGIOUS_CENTER = 9,

  /**
   * 关隘（如虎牢关、函谷关）
   *
   * @generated from enum value: PASS = 10;
   */
  PASS = 10,
}

/**
 * Describes the enum chinesehistory.AdministrativeLevel.
 */
export const AdministrativeLevelSchema: GenEnum<AdministrativeLevel> = /*@__PURE__*/
  enumDesc(file_city, 1);

/**
 * @generated from service chinesehistory.CityService
 */
export const CityService: GenService<{
  /**
   * ============== 查询操作 ==============
   * 获取所有城市
   *
   * @generated from rpc chinesehistory.CityService.GetCities
   */
  getCities: {
    methodKind: "unary";
    input: typeof GetCitiesRequestSchema;
    output: typeof GetCitiesResponseSchema;
  },
  /**
   * 查找城市（根据条件）
   *
   * @generated from rpc chinesehistory.CityService.FindCities
   */
  findCities: {
    methodKind: "unary";
    input: typeof FindCitiesRequestSchema;
    output: typeof GetCitiesResponseSchema;
  },
  /**
   * 获取所有城市历史
   *
   * @generated from rpc chinesehistory.CityService.GetCityHistories
   */
  getCityHistories: {
    methodKind: "unary";
    input: typeof GetCityHistoriesRequestSchema;
    output: typeof GetCityHistoriesResponseSchema;
  },
  /**
   * 查找城市历史（根据条件）
   *
   * @generated from rpc chinesehistory.CityService.FindCityHistories
   */
  findCityHistories: {
    methodKind: "unary";
    input: typeof FindCityHistoriesRequestSchema;
    output: typeof GetCityHistoriesResponseSchema;
  },
  /**
   * ============== 批量CRUD操作 ==============
   * 批量插入或更新城市
   *
   * @generated from rpc chinesehistory.CityService.UpsertCities
   */
  upsertCities: {
    methodKind: "unary";
    input: typeof UpsertCitiesRequestSchema;
    output: typeof BatchOperationResponseSchema;
  },
  /**
   * 批量删除城市
   *
   * @generated from rpc chinesehistory.CityService.DeleteCities
   */
  deleteCities: {
    methodKind: "unary";
    input: typeof DeleteCitiesRequestSchema;
    output: typeof BatchOperationResponseSchema;
  },
  /**
   * 批量插入或更新城市历史
   *
   * @generated from rpc chinesehistory.CityService.UpsertCityHistories
   */
  upsertCityHistories: {
    methodKind: "unary";
    input: typeof UpsertCityHistoriesRequestSchema;
    output: typeof BatchOperationResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_city, 0);

