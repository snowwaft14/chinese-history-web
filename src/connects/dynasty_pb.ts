// @generated by protoc-gen-es v2.5.2 with parameter "target=ts"
// @generated from file dynasty.proto (package chinesehistory, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { BatchOperationResponseSchema, GregorianDate } from "./common_pb";
import { file_common } from "./common_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file dynasty.proto.
 */
export const file_dynasty: GenFile = /*@__PURE__*/
  fileDesc("Cg1keW5hc3R5LnByb3RvEg5jaGluZXNlaGlzdG9yeSLLAQoHRHluYXN0eRIMCgRuYW1lGAEgASgJEhMKC2Rlc2NyaXB0aW9uGAIgASgJEhIKCnN0YXJ0X3llYXIYAyABKAUSEAoIZW5kX3llYXIYBCABKAUSJwoHcGVyaW9kcxgFIAMoCzIWLmNoaW5lc2VoaXN0b3J5LlBlcmlvZBIpCghlbXBlcm9ycxgGIAMoCzIXLmNoaW5lc2VoaXN0b3J5LkVtcGVyb3ISDAoEdGFncxgHIAMoCRIVCg1zZWFyY2hfdmFsdWVzGAggAygJIpwBCgZQZXJpb2QSDAoEbmFtZRgBIAEoCRITCgtkZXNjcmlwdGlvbhgCIAEoCRIsCgVzdGFydBgDIAEoCzIdLmNoaW5lc2VoaXN0b3J5LkdyZWdvcmlhbkRhdGUSKgoDZW5kGAQgASgLMh0uY2hpbmVzZWhpc3RvcnkuR3JlZ29yaWFuRGF0ZRIVCg1zZWFyY2hfdmFsdWVzGAUgAygJIrwDCgdFbXBlcm9yEgoKAmlkGAEgASgJEgwKBG5hbWUYAiABKAkSEwoLdGVtcGxlX25hbWUYAyABKAkSFwoPcG9zdGh1bW91c19uYW1lGAQgASgJEhUKDWNvdXJ0ZXN5X25hbWUYBSABKAkSFAoMZHluYXN0eV9uYW1lGAYgASgJEioKCWVyYV9uYW1lcxgHIAMoCzIXLmNoaW5lc2VoaXN0b3J5LkVyYU5hbWUSMgoLcmVpZ25fc3RhcnQYCCABKAsyHS5jaGluZXNlaGlzdG9yeS5HcmVnb3JpYW5EYXRlEjAKCXJlaWduX2VuZBgJIAEoCzIdLmNoaW5lc2VoaXN0b3J5LkdyZWdvcmlhbkRhdGUSLAoFYmlydGgYCiABKAsyHS5jaGluZXNlaGlzdG9yeS5HcmVnb3JpYW5EYXRlEiwKBWRlYXRoGAsgASgLMh0uY2hpbmVzZWhpc3RvcnkuR3JlZ29yaWFuRGF0ZRISCgpiaXJ0aHBsYWNlGAwgASgJEhQKDGJ1cmlhbF9wbGFjZRgNIAEoCRINCgVub3RlcxgOIAEoCRIVCg1zZWFyY2hfdmFsdWVzGA8gAygJIqABCgdFcmFOYW1lEgwKBG5hbWUYASABKAkSMQoKc3RhcnRfZGF0ZRgCIAEoCzIdLmNoaW5lc2VoaXN0b3J5LkdyZWdvcmlhbkRhdGUSLwoIZW5kX2RhdGUYAyABKAsyHS5jaGluZXNlaGlzdG9yeS5HcmVnb3JpYW5EYXRlEgwKBG5vdGUYBCABKAkSFQoNc2VhcmNoX3ZhbHVlcxgFIAMoCSJCChRHZXREeW5hc3RpZXNSZXNwb25zZRIqCglkeW5hc3RpZXMYASADKAsyFy5jaGluZXNlaGlzdG9yeS5EeW5hc3R5IkAKE0dldEVtcGVyb3JzUmVzcG9uc2USKQoIZW1wZXJvcnMYASADKAsyFy5jaGluZXNlaGlzdG9yeS5FbXBlcm9yIj0KD0dldEVyYXNSZXNwb25zZRIqCgllcmFfbmFtZXMYASADKAsyFy5jaGluZXNlaGlzdG9yeS5FcmFOYW1lIhUKE0dldER5bmFzdGllc1JlcXVlc3QibAoURmluZER5bmFzdGllc1JlcXVlc3QSEgoKZHluYXN0eV9pZBgBIAEoCRIMCgRuYW1lGAIgASgJEhIKCnN0YXJ0X3llYXIYAyABKAUSEAoIZW5kX3llYXIYBCABKAUSDAoEdGFncxgFIAMoCSJiChNGaW5kRW1wZXJvcnNSZXF1ZXN0EhIKCmVtcGVyb3JfaWQYASABKAkSFAoMZHluYXN0eV9uYW1lGAIgASgJEgwKBG5hbWUYAyABKAkSEwoLdGVtcGxlX25hbWUYBCABKAkiSwoPRmluZEVyYXNSZXF1ZXN0EhIKCmR5bmFzdHlfaWQYASABKAkSEgoKZW1wZXJvcl9pZBgCIAEoCRIQCghlcmFfbmFtZRgDIAEoCSIUChJHZXRFbXBlcm9yc1JlcXVlc3QiEAoOR2V0RXJhc1JlcXVlc3QiRAoWVXBzZXJ0RHluYXN0aWVzUmVxdWVzdBIqCglkeW5hc3RpZXMYASADKAsyFy5jaGluZXNlaGlzdG9yeS5EeW5hc3R5Ii8KFkRlbGV0ZUR5bmFzdGllc1JlcXVlc3QSFQoNZHluYXN0eV9uYW1lcxgBIAMoCSJCChVVcHNlcnRFbXBlcm9yc1JlcXVlc3QSKQoIZW1wZXJvcnMYASADKAsyFy5jaGluZXNlaGlzdG9yeS5FbXBlcm9yIiwKFURlbGV0ZUVtcGVyb3JzUmVxdWVzdBITCgtlbXBlcm9yX2lkcxgBIAMoCSJVChRVcHNlcnRQZXJpb2RzUmVxdWVzdBInCgdwZXJpb2RzGAEgAygLMhYuY2hpbmVzZWhpc3RvcnkuUGVyaW9kEhQKDGR5bmFzdHlfbmFtZRgCIAEoCSJXChVVcHNlcnRFcmFOYW1lc1JlcXVlc3QSKgoJZXJhX25hbWVzGAEgAygLMhcuY2hpbmVzZWhpc3RvcnkuRXJhTmFtZRISCgplbXBlcm9yX2lkGAIgASgJMtwICg5EeW5hc3R5U2VydmljZRJZCgxHZXREeW5hc3RpZXMSIy5jaGluZXNlaGlzdG9yeS5HZXREeW5hc3RpZXNSZXF1ZXN0GiQuY2hpbmVzZWhpc3RvcnkuR2V0RHluYXN0aWVzUmVzcG9uc2USWwoNRmluZER5bmFzdGllcxIkLmNoaW5lc2VoaXN0b3J5LkZpbmREeW5hc3RpZXNSZXF1ZXN0GiQuY2hpbmVzZWhpc3RvcnkuR2V0RHluYXN0aWVzUmVzcG9uc2USVgoLR2V0RW1wZXJvcnMSIi5jaGluZXNlaGlzdG9yeS5HZXRFbXBlcm9yc1JlcXVlc3QaIy5jaGluZXNlaGlzdG9yeS5HZXRFbXBlcm9yc1Jlc3BvbnNlElgKDEZpbmRFbXBlcm9ycxIjLmNoaW5lc2VoaXN0b3J5LkZpbmRFbXBlcm9yc1JlcXVlc3QaIy5jaGluZXNlaGlzdG9yeS5HZXRFbXBlcm9yc1Jlc3BvbnNlEkoKB0dldEVyYXMSHi5jaGluZXNlaGlzdG9yeS5HZXRFcmFzUmVxdWVzdBofLmNoaW5lc2VoaXN0b3J5LkdldEVyYXNSZXNwb25zZRJMCghGaW5kRXJhcxIfLmNoaW5lc2VoaXN0b3J5LkZpbmRFcmFzUmVxdWVzdBofLmNoaW5lc2VoaXN0b3J5LkdldEVyYXNSZXNwb25zZRJhCg9VcHNlcnREeW5hc3RpZXMSJi5jaGluZXNlaGlzdG9yeS5VcHNlcnREeW5hc3RpZXNSZXF1ZXN0GiYuY2hpbmVzZWhpc3RvcnkuQmF0Y2hPcGVyYXRpb25SZXNwb25zZRJhCg9EZWxldGVEeW5hc3RpZXMSJi5jaGluZXNlaGlzdG9yeS5EZWxldGVEeW5hc3RpZXNSZXF1ZXN0GiYuY2hpbmVzZWhpc3RvcnkuQmF0Y2hPcGVyYXRpb25SZXNwb25zZRJfCg5VcHNlcnRFbXBlcm9ycxIlLmNoaW5lc2VoaXN0b3J5LlVwc2VydEVtcGVyb3JzUmVxdWVzdBomLmNoaW5lc2VoaXN0b3J5LkJhdGNoT3BlcmF0aW9uUmVzcG9uc2USXwoORGVsZXRlRW1wZXJvcnMSJS5jaGluZXNlaGlzdG9yeS5EZWxldGVFbXBlcm9yc1JlcXVlc3QaJi5jaGluZXNlaGlzdG9yeS5CYXRjaE9wZXJhdGlvblJlc3BvbnNlEl0KDVVwc2VydFBlcmlvZHMSJC5jaGluZXNlaGlzdG9yeS5VcHNlcnRQZXJpb2RzUmVxdWVzdBomLmNoaW5lc2VoaXN0b3J5LkJhdGNoT3BlcmF0aW9uUmVzcG9uc2USXwoOVXBzZXJ0RXJhTmFtZXMSJS5jaGluZXNlaGlzdG9yeS5VcHNlcnRFcmFOYW1lc1JlcXVlc3QaJi5jaGluZXNlaGlzdG9yeS5CYXRjaE9wZXJhdGlvblJlc3BvbnNlQjCqAi1OZXdpbmZvc29mdC5DaGluZXNlSGlzdG9yeS5TZXJ2ZXIuU2VydmljZUJhc2ViBnByb3RvMw", [file_common]);

/**
 * 王朝，例如唐、宋、元、明、清
 *
 * @generated from message chinesehistory.Dynasty
 */
export type Dynasty = Message<"chinesehistory.Dynasty"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: int32 start_year = 3;
   */
  startYear: number;

  /**
   * @generated from field: int32 end_year = 4;
   */
  endYear: number;

  /**
   * @generated from field: repeated chinesehistory.Period periods = 5;
   */
  periods: Period[];

  /**
   * 所有皇帝
   *
   * @generated from field: repeated chinesehistory.Emperor emperors = 6;
   */
  emperors: Emperor[];

  /**
   * @generated from field: repeated string tags = 7;
   */
  tags: string[];

  /**
   * 搜索辅助工具，例如拼音、声母
   *
   * @generated from field: repeated string search_values = 8;
   */
  searchValues: string[];
};

/**
 * Describes the message chinesehistory.Dynasty.
 * Use `create(DynastySchema)` to create a new message.
 */
export const DynastySchema: GenMessage<Dynasty> = /*@__PURE__*/
  messageDesc(file_dynasty, 0);

/**
 * 王朝下的一些时代，例如北宋、南宋、初唐、盛唐、中唐、晚唐、安史之乱、贞观之治等等
 *
 * @generated from message chinesehistory.Period
 */
export type Period = Message<"chinesehistory.Period"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * 开始日期
   *
   * @generated from field: chinesehistory.GregorianDate start = 3;
   */
  start?: GregorianDate;

  /**
   * 结束日期 
   *
   * @generated from field: chinesehistory.GregorianDate end = 4;
   */
  end?: GregorianDate;

  /**
   * 搜索辅助工具，例如拼音、声母
   *
   * @generated from field: repeated string search_values = 5;
   */
  searchValues: string[];
};

/**
 * Describes the message chinesehistory.Period.
 * Use `create(PeriodSchema)` to create a new message.
 */
export const PeriodSchema: GenMessage<Period> = /*@__PURE__*/
  messageDesc(file_dynasty, 1);

/**
 * 皇帝或国家的领袖
 *
 * @generated from message chinesehistory.Emperor
 */
export type Emperor = Message<"chinesehistory.Emperor"> & {
  /**
   * 唯一标识符，一般是约定叫法，例如"汉武帝"、"唐太宗"、"清康熙"
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * 皇帝姓名，如"赵匡胤"
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * 庙号，如"太祖"
   *
   * @generated from field: string temple_name = 3;
   */
  templeName: string;

  /**
   * 谥号，如"文皇帝"
   *
   * @generated from field: string posthumous_name = 4;
   */
  posthumousName: string;

  /**
   * 字（如"德基"）
   *
   * @generated from field: string courtesy_name = 5;
   */
  courtesyName: string;

  /**
   * 所属朝代ID，如"唐朝"
   *
   * @generated from field: string dynasty_name = 6;
   */
  dynastyName: string;

  /**
   * 所有年号
   *
   * @generated from field: repeated chinesehistory.EraName era_names = 7;
   */
  eraNames: EraName[];

  /**
   * 在位起始
   *
   * @generated from field: chinesehistory.GregorianDate reign_start = 8;
   */
  reignStart?: GregorianDate;

  /**
   * 在位结束
   *
   * @generated from field: chinesehistory.GregorianDate reign_end = 9;
   */
  reignEnd?: GregorianDate;

  /**
   * 出生日期
   *
   * @generated from field: chinesehistory.GregorianDate birth = 10;
   */
  birth?: GregorianDate;

  /**
   * 去世日期
   *
   * @generated from field: chinesehistory.GregorianDate death = 11;
   */
  death?: GregorianDate;

  /**
   * 出生地
   *
   * @generated from field: string birthplace = 12;
   */
  birthplace: string;

  /**
   * 陵墓或安葬地
   *
   * @generated from field: string burial_place = 13;
   */
  burialPlace: string;

  /**
   * 备注或简介
   *
   * @generated from field: string notes = 14;
   */
  notes: string;

  /**
   * 搜索辅助工具，例如拼音、声母
   *
   * @generated from field: repeated string search_values = 15;
   */
  searchValues: string[];
};

/**
 * Describes the message chinesehistory.Emperor.
 * Use `create(EmperorSchema)` to create a new message.
 */
export const EmperorSchema: GenMessage<Emperor> = /*@__PURE__*/
  messageDesc(file_dynasty, 2);

/**
 * 年号
 *
 * @generated from message chinesehistory.EraName
 */
export type EraName = Message<"chinesehistory.EraName"> & {
  /**
   * 年号名称，如"贞观"
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * 年号开始日期
   *
   * @generated from field: chinesehistory.GregorianDate start_date = 2;
   */
  startDate?: GregorianDate;

  /**
   * 年号结束日期
   *
   * @generated from field: chinesehistory.GregorianDate end_date = 3;
   */
  endDate?: GregorianDate;

  /**
   * 补充信息（如更改原因、事件）
   *
   * @generated from field: string note = 4;
   */
  note: string;

  /**
   * 搜索辅助工具，例如拼音、声母
   *
   * @generated from field: repeated string search_values = 5;
   */
  searchValues: string[];
};

/**
 * Describes the message chinesehistory.EraName.
 * Use `create(EraNameSchema)` to create a new message.
 */
export const EraNameSchema: GenMessage<EraName> = /*@__PURE__*/
  messageDesc(file_dynasty, 3);

/**
 * 获取多个朝代响应
 *
 * @generated from message chinesehistory.GetDynastiesResponse
 */
export type GetDynastiesResponse = Message<"chinesehistory.GetDynastiesResponse"> & {
  /**
   * @generated from field: repeated chinesehistory.Dynasty dynasties = 1;
   */
  dynasties: Dynasty[];
};

/**
 * Describes the message chinesehistory.GetDynastiesResponse.
 * Use `create(GetDynastiesResponseSchema)` to create a new message.
 */
export const GetDynastiesResponseSchema: GenMessage<GetDynastiesResponse> = /*@__PURE__*/
  messageDesc(file_dynasty, 4);

/**
 * 获取多个皇帝响应
 *
 * @generated from message chinesehistory.GetEmperorsResponse
 */
export type GetEmperorsResponse = Message<"chinesehistory.GetEmperorsResponse"> & {
  /**
   * @generated from field: repeated chinesehistory.Emperor emperors = 1;
   */
  emperors: Emperor[];
};

/**
 * Describes the message chinesehistory.GetEmperorsResponse.
 * Use `create(GetEmperorsResponseSchema)` to create a new message.
 */
export const GetEmperorsResponseSchema: GenMessage<GetEmperorsResponse> = /*@__PURE__*/
  messageDesc(file_dynasty, 5);

/**
 * 获取多个年号响应
 *
 * @generated from message chinesehistory.GetErasResponse
 */
export type GetErasResponse = Message<"chinesehistory.GetErasResponse"> & {
  /**
   * 年号列表
   *
   * @generated from field: repeated chinesehistory.EraName era_names = 1;
   */
  eraNames: EraName[];
};

/**
 * Describes the message chinesehistory.GetErasResponse.
 * Use `create(GetErasResponseSchema)` to create a new message.
 */
export const GetErasResponseSchema: GenMessage<GetErasResponse> = /*@__PURE__*/
  messageDesc(file_dynasty, 6);

/**
 * 获取朝代请求（无查询条件）
 *
 * 空请求，获取所有朝代
 *
 * @generated from message chinesehistory.GetDynastiesRequest
 */
export type GetDynastiesRequest = Message<"chinesehistory.GetDynastiesRequest"> & {
};

/**
 * Describes the message chinesehistory.GetDynastiesRequest.
 * Use `create(GetDynastiesRequestSchema)` to create a new message.
 */
export const GetDynastiesRequestSchema: GenMessage<GetDynastiesRequest> = /*@__PURE__*/
  messageDesc(file_dynasty, 7);

/**
 * 查找朝代请求（包含所有可能的查询条件）
 *
 * @generated from message chinesehistory.FindDynastiesRequest
 */
export type FindDynastiesRequest = Message<"chinesehistory.FindDynastiesRequest"> & {
  /**
   * 朝代ID（可选）
   *
   * @generated from field: string dynasty_id = 1;
   */
  dynastyId: string;

  /**
   * 朝代名称（可选）
   *
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * 开始年份（可选）
   *
   * @generated from field: int32 start_year = 3;
   */
  startYear: number;

  /**
   * 结束年份（可选）
   *
   * @generated from field: int32 end_year = 4;
   */
  endYear: number;

  /**
   * 标签过滤（可选）
   *
   * @generated from field: repeated string tags = 5;
   */
  tags: string[];
};

/**
 * Describes the message chinesehistory.FindDynastiesRequest.
 * Use `create(FindDynastiesRequestSchema)` to create a new message.
 */
export const FindDynastiesRequestSchema: GenMessage<FindDynastiesRequest> = /*@__PURE__*/
  messageDesc(file_dynasty, 8);

/**
 * 查找皇帝请求（包含所有可能的查询条件）
 *
 * @generated from message chinesehistory.FindEmperorsRequest
 */
export type FindEmperorsRequest = Message<"chinesehistory.FindEmperorsRequest"> & {
  /**
   * 皇帝ID（可选）
   *
   * @generated from field: string emperor_id = 1;
   */
  emperorId: string;

  /**
   * 朝代名称（可选）
   *
   * @generated from field: string dynasty_name = 2;
   */
  dynastyName: string;

  /**
   * 皇帝姓名（可选）
   *
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * 庙号（可选）
   *
   * @generated from field: string temple_name = 4;
   */
  templeName: string;
};

/**
 * Describes the message chinesehistory.FindEmperorsRequest.
 * Use `create(FindEmperorsRequestSchema)` to create a new message.
 */
export const FindEmperorsRequestSchema: GenMessage<FindEmperorsRequest> = /*@__PURE__*/
  messageDesc(file_dynasty, 9);

/**
 * 查找年号请求（包含所有可能的查询条件）
 *
 * @generated from message chinesehistory.FindErasRequest
 */
export type FindErasRequest = Message<"chinesehistory.FindErasRequest"> & {
  /**
   * 朝代ID（可选）
   *
   * @generated from field: string dynasty_id = 1;
   */
  dynastyId: string;

  /**
   * 皇帝ID（可选）
   *
   * @generated from field: string emperor_id = 2;
   */
  emperorId: string;

  /**
   * 年号名称（可选）
   *
   * @generated from field: string era_name = 3;
   */
  eraName: string;
};

/**
 * Describes the message chinesehistory.FindErasRequest.
 * Use `create(FindErasRequestSchema)` to create a new message.
 */
export const FindErasRequestSchema: GenMessage<FindErasRequest> = /*@__PURE__*/
  messageDesc(file_dynasty, 10);

/**
 * 获取皇帝请求（无查询条件）
 *
 * 空请求，获取所有皇帝
 *
 * @generated from message chinesehistory.GetEmperorsRequest
 */
export type GetEmperorsRequest = Message<"chinesehistory.GetEmperorsRequest"> & {
};

/**
 * Describes the message chinesehistory.GetEmperorsRequest.
 * Use `create(GetEmperorsRequestSchema)` to create a new message.
 */
export const GetEmperorsRequestSchema: GenMessage<GetEmperorsRequest> = /*@__PURE__*/
  messageDesc(file_dynasty, 11);

/**
 * 获取年号请求（无查询条件）
 *
 * 空请求，获取所有年号
 *
 * @generated from message chinesehistory.GetErasRequest
 */
export type GetErasRequest = Message<"chinesehistory.GetErasRequest"> & {
};

/**
 * Describes the message chinesehistory.GetErasRequest.
 * Use `create(GetErasRequestSchema)` to create a new message.
 */
export const GetErasRequestSchema: GenMessage<GetErasRequest> = /*@__PURE__*/
  messageDesc(file_dynasty, 12);

/**
 * 批量朝代操作请求
 *
 * @generated from message chinesehistory.UpsertDynastiesRequest
 */
export type UpsertDynastiesRequest = Message<"chinesehistory.UpsertDynastiesRequest"> & {
  /**
   * 要插入或更新的朝代列表
   *
   * @generated from field: repeated chinesehistory.Dynasty dynasties = 1;
   */
  dynasties: Dynasty[];
};

/**
 * Describes the message chinesehistory.UpsertDynastiesRequest.
 * Use `create(UpsertDynastiesRequestSchema)` to create a new message.
 */
export const UpsertDynastiesRequestSchema: GenMessage<UpsertDynastiesRequest> = /*@__PURE__*/
  messageDesc(file_dynasty, 13);

/**
 * 批量删除朝代请求
 *
 * @generated from message chinesehistory.DeleteDynastiesRequest
 */
export type DeleteDynastiesRequest = Message<"chinesehistory.DeleteDynastiesRequest"> & {
  /**
   * 要删除的朝代名称列表
   *
   * @generated from field: repeated string dynasty_names = 1;
   */
  dynastyNames: string[];
};

/**
 * Describes the message chinesehistory.DeleteDynastiesRequest.
 * Use `create(DeleteDynastiesRequestSchema)` to create a new message.
 */
export const DeleteDynastiesRequestSchema: GenMessage<DeleteDynastiesRequest> = /*@__PURE__*/
  messageDesc(file_dynasty, 14);

/**
 * 批量皇帝操作请求
 *
 * @generated from message chinesehistory.UpsertEmperorsRequest
 */
export type UpsertEmperorsRequest = Message<"chinesehistory.UpsertEmperorsRequest"> & {
  /**
   * 要插入或更新的皇帝列表
   *
   * @generated from field: repeated chinesehistory.Emperor emperors = 1;
   */
  emperors: Emperor[];
};

/**
 * Describes the message chinesehistory.UpsertEmperorsRequest.
 * Use `create(UpsertEmperorsRequestSchema)` to create a new message.
 */
export const UpsertEmperorsRequestSchema: GenMessage<UpsertEmperorsRequest> = /*@__PURE__*/
  messageDesc(file_dynasty, 15);

/**
 * 批量删除皇帝请求
 *
 * @generated from message chinesehistory.DeleteEmperorsRequest
 */
export type DeleteEmperorsRequest = Message<"chinesehistory.DeleteEmperorsRequest"> & {
  /**
   * 要删除的皇帝ID列表
   *
   * @generated from field: repeated string emperor_ids = 1;
   */
  emperorIds: string[];
};

/**
 * Describes the message chinesehistory.DeleteEmperorsRequest.
 * Use `create(DeleteEmperorsRequestSchema)` to create a new message.
 */
export const DeleteEmperorsRequestSchema: GenMessage<DeleteEmperorsRequest> = /*@__PURE__*/
  messageDesc(file_dynasty, 16);

/**
 * 批量时期操作请求
 *
 * @generated from message chinesehistory.UpsertPeriodsRequest
 */
export type UpsertPeriodsRequest = Message<"chinesehistory.UpsertPeriodsRequest"> & {
  /**
   * 要插入或更新的时期列表
   *
   * @generated from field: repeated chinesehistory.Period periods = 1;
   */
  periods: Period[];

  /**
   * 所属朝代名称
   *
   * @generated from field: string dynasty_name = 2;
   */
  dynastyName: string;
};

/**
 * Describes the message chinesehistory.UpsertPeriodsRequest.
 * Use `create(UpsertPeriodsRequestSchema)` to create a new message.
 */
export const UpsertPeriodsRequestSchema: GenMessage<UpsertPeriodsRequest> = /*@__PURE__*/
  messageDesc(file_dynasty, 17);

/**
 * 批量年号操作请求
 *
 * @generated from message chinesehistory.UpsertEraNamesRequest
 */
export type UpsertEraNamesRequest = Message<"chinesehistory.UpsertEraNamesRequest"> & {
  /**
   * 要插入或更新的年号列表
   *
   * @generated from field: repeated chinesehistory.EraName era_names = 1;
   */
  eraNames: EraName[];

  /**
   * 所属皇帝ID
   *
   * @generated from field: string emperor_id = 2;
   */
  emperorId: string;
};

/**
 * Describes the message chinesehistory.UpsertEraNamesRequest.
 * Use `create(UpsertEraNamesRequestSchema)` to create a new message.
 */
export const UpsertEraNamesRequestSchema: GenMessage<UpsertEraNamesRequest> = /*@__PURE__*/
  messageDesc(file_dynasty, 18);

/**
 * 朝代服务
 *
 * @generated from service chinesehistory.DynastyService
 */
export const DynastyService: GenService<{
  /**
   * ============== 查询操作 ==============
   * 获取所有朝代
   *
   * @generated from rpc chinesehistory.DynastyService.GetDynasties
   */
  getDynasties: {
    methodKind: "unary";
    input: typeof GetDynastiesRequestSchema;
    output: typeof GetDynastiesResponseSchema;
  },
  /**
   * 查找朝代（根据条件）
   *
   * @generated from rpc chinesehistory.DynastyService.FindDynasties
   */
  findDynasties: {
    methodKind: "unary";
    input: typeof FindDynastiesRequestSchema;
    output: typeof GetDynastiesResponseSchema;
  },
  /**
   * 获取所有皇帝
   *
   * @generated from rpc chinesehistory.DynastyService.GetEmperors
   */
  getEmperors: {
    methodKind: "unary";
    input: typeof GetEmperorsRequestSchema;
    output: typeof GetEmperorsResponseSchema;
  },
  /**
   * 查找皇帝（根据条件）
   *
   * @generated from rpc chinesehistory.DynastyService.FindEmperors
   */
  findEmperors: {
    methodKind: "unary";
    input: typeof FindEmperorsRequestSchema;
    output: typeof GetEmperorsResponseSchema;
  },
  /**
   * 获取所有年号
   *
   * @generated from rpc chinesehistory.DynastyService.GetEras
   */
  getEras: {
    methodKind: "unary";
    input: typeof GetErasRequestSchema;
    output: typeof GetErasResponseSchema;
  },
  /**
   * 查找年号（根据条件）
   *
   * @generated from rpc chinesehistory.DynastyService.FindEras
   */
  findEras: {
    methodKind: "unary";
    input: typeof FindErasRequestSchema;
    output: typeof GetErasResponseSchema;
  },
  /**
   * ============== 批量CRUD操作 ==============
   * 批量插入或更新朝代
   *
   * @generated from rpc chinesehistory.DynastyService.UpsertDynasties
   */
  upsertDynasties: {
    methodKind: "unary";
    input: typeof UpsertDynastiesRequestSchema;
    output: typeof BatchOperationResponseSchema;
  },
  /**
   * 批量删除朝代
   *
   * @generated from rpc chinesehistory.DynastyService.DeleteDynasties
   */
  deleteDynasties: {
    methodKind: "unary";
    input: typeof DeleteDynastiesRequestSchema;
    output: typeof BatchOperationResponseSchema;
  },
  /**
   * 批量插入或更新皇帝
   *
   * @generated from rpc chinesehistory.DynastyService.UpsertEmperors
   */
  upsertEmperors: {
    methodKind: "unary";
    input: typeof UpsertEmperorsRequestSchema;
    output: typeof BatchOperationResponseSchema;
  },
  /**
   * 批量删除皇帝
   *
   * @generated from rpc chinesehistory.DynastyService.DeleteEmperors
   */
  deleteEmperors: {
    methodKind: "unary";
    input: typeof DeleteEmperorsRequestSchema;
    output: typeof BatchOperationResponseSchema;
  },
  /**
   * 批量插入或更新时期
   *
   * @generated from rpc chinesehistory.DynastyService.UpsertPeriods
   */
  upsertPeriods: {
    methodKind: "unary";
    input: typeof UpsertPeriodsRequestSchema;
    output: typeof BatchOperationResponseSchema;
  },
  /**
   * 批量插入或更新年号
   *
   * @generated from rpc chinesehistory.DynastyService.UpsertEraNames
   */
  upsertEraNames: {
    methodKind: "unary";
    input: typeof UpsertEraNamesRequestSchema;
    output: typeof BatchOperationResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_dynasty, 0);

